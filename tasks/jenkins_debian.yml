---
# file: roles/php-ci/tasks/jenkins_debian.yml

- name: Install required tools
  action: apt pkg={{ item }} state=latest
  with_items:
       - apt
       - git
       - openjdk-6-jdk
       - php5
       - php-pear
       - php5-xsl
       - php5-dev
       - ant
       - curl
       - php5-curl
       - php5-xdebug
       - python-pycurl
       - python-software-properties

- name: Add Jenkins apt-key
  action: apt_key url={{ jenkins.deb.key }} state=present

- name: Add Jenkins repository
  apt_repository: repo='{{ jenkins.deb.repo }}' state=present

- name: Install Jenkins
  apt: pkg=jenkins force=yes state=installed

- name: Set Jenkins port to {{ jenkins.port }}
  lineinfile: dest=/etc/default/jenkins regexp="^HTTP_PORT=" line="HTTP_PORT={{ jenkins.port }}" state=present

- name: Let Jenkins know the new port by restarting
  service: name=jenkins state=restarted

- command: pear config-set auto_discover 1

- name: PEAR updates and upgrades
  command: pear {{ item }}
  with_items:
   - update-channels
   - upgrade-all

- name: PEAR installing modules
  command: pear install {{ item }}
  register: pear_result
  with_items:
       - -f pear.netpirates.net/phpDox
       - pear.symfony.com/Yaml
       - pear.phpmd.org/PHP_PMD
       - pear.phpqatools.org/phpqatools
       - PHP_CodeSniffer
  failed_when: "'No releases available for package' in pear_result.stdout"

- file: path=/var/lib/jenkins/updates state=directory owner=jenkins

- name: Workaround for updates issues with CLI
  action: command wget -O /var/lib/jenkins/updates/default.json http://updates.jenkins-ci.org/update-center.json

- name: Clean default.json file
  lineinfile: dest=/var/lib/jenkins/updates/default.json regexp='updateCenter.*\(' state=absent

- lineinfile: dest=/var/lib/jenkins/updates/default.json regexp='\);' state=absent

- name: Workaround for updates issues with CLI
  action: command chown -R jenkins:nogroup /var/lib/jenkins/updates

- name: Get Jenkins cli
  action: command wget http://localhost:{{ jenkins.port }}/jnlpJars/jenkins-cli.jar

- name: Update plugin info manually
  action: "shell curl -L http://updates.jenkins-ci.org/update-center.json | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:{{ jenkins.port }}/updateCenter/byId/default/postBack"

- name: Get Jenkins plugins
  action: command java -jar jenkins-cli.jar -s http://localhost:{{ jenkins.port }} install-plugin git checkstyle cloverphp dry htmlpublisher jdepend plot pmd violations xunit

- file: path=/var/lib/jenkins/jobs/yii-sample-project state=directory owner=jenkins

- copy: src=config.xml dest=/var/lib/jenkins/jobs/yii-sample-project/config.xml owner=jenkins

- name: Grabs PHP frameworks of choice
  command:  wget {{ item.download_url }}{{ item.filename }}
  with_items:  jenkins.php.frameworks.sources
  when:  jenkins.php.frameworks.sources is defined

- name: Extract frameworks
  command: tar xzvf {{ item.filename }} -C {{ jenkins.php.frameworks.base_directory }}
  with_items:  jenkins.php.frameworks.sources
  when:  jenkins.php.frameworks.sources is defined

- name: Legacy fix for old times' sake
  file: state=link src={{ jenkins.php.frameworks.base_directory }}yii-1.1.14.f0fee9 dest={{ jenkins.php.frameworks.base_directory }}yii

- service: name=jenkins state=restarted

- wait_for: port={{ jenkins.port }} delay=30

- command: java -jar jenkins-cli.jar -s http://localhost:{{ jenkins.port }} build "yii-sample-project"
  ignore_errors: yes

- file: path={{ ansible_env['PWD'] }}/jenkins-cli.jar state=absent